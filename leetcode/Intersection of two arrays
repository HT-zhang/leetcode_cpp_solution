题目描述:
求两个数组的交集
法1：
用set求第一个数组的set中，再看看第二个数组的元素是否存在与该set中，如果存在则将其元素添加

#include <set>
vector<int>intersection(vector<int>&nums1, vector<int>&nums2)
{
    vector<int>res;
    set<int>set1;
    for(int i = 0; i<nums1.size(); i++)
    {
        set1.insert(nums1[i]);
    }
    for(int i = 0; i<nums2.size(); i++)
    {
        if (set1.find(nums2[i]) != set1.end())
        {
            res.push_back(nums2[i]);
            set1.erase(nums2[i]);
        }
    }
    return res;
}

法2：
用排序加双指针
先排序，数组元素较小的指针往前移，当两个数组相等时，如果该元素尚未被添加入返回的向量，则对其进行添加

#include <algorithm>
vector<int> intersection(vector<int>&nums1, vector<int>&nums2)
{
    sort(nums1.begin(), nums2.end());
    sort(nums1.begin(), nums2.end());
    vector<int>res;
    int i = 0, j = 0;
    while (i < nums1.size() && j <nums2.size)
    {
        if (nums1[i] > nums2[j])
            j++;
        else if(nums1[i] < nums2[j])
            i++;
        else
            if (res.empty() || res.back() != nums1[i])
            {
                res.push_back(nums1[i]);
            }
        	i++;
        	j++
    }
    return res;
}
